Epson EPL-5x00L/EPL-6x00L Printer Driver
========================================

The easiest way to print under Linux is to use a PostScript able printer, which
is ideally supported by its manufacturer.

But since I've got an EPSON EPL-6100L with plenty of toner (5000 pages
capacity), I would like to use it first.

This repository is a clone of an older Sourceforge / CVS project
https://sourceforge.net/projects/epsonepl/

Installation instructions Ubuntu 20.04
======================================

Tested for Ubuntu 20.04, but it could work for other distributions too.
Tested with EPSON EPL-6100L, but it should work for the similar models (ending with `L`) too.
Works as of September 2020.

First compile the driver and install driver and printer description to your system:

```
git clone <this-repo>
./configure --prefix='/usr'
make
sudo make install
```

Now select "Printing" in your Linux settings, "Add Printer" and once you
offered a choice, select "Provide PPD file", then point to a .ppd for your
model in the foomatic_PPDs/ subfolder of this repository. The .ppd file relies
on the binary you've compiled and installed to /usr/bin in the previous step.

Print some example document or a test page - works!

- - -

What is this?
===========
  This project is named "epsonepl".
  It is a printer driver which gives ghostscript the ability
  to print to Epson EPL-5700L, EPL-5800L, EPL-5900L,
  EPL-6100L and EPL-6200L laser printers. EPL-6100L and EPL-6200L 
  support is not deeply tested (volunteers wanted!).

  There are some reports that LP-1400 (sold in Japan) is EPL-6200L compatible,
  and EPL-2180 (an A3 printer sold in China and the Philipines) also - for the
  latter we may extend the paper size support if this can be confirmed.
  (LP-800S=5900L?, LP-1200 owners please comment).

Requirement
===========
  Type "gs -h" to get your ghostscript version and device list. You need 
  GNU ghostscript 6.53+ or AFPL Ghostscript 7.04+, and the "ijs" device 
  listed among the device list to use this plugin.

  The ijs part in AFPL ghostscript 8.00 (and all devel versions of gs 
  between v. 7.22 - 8.00) has a bug which has been reported.
  The fix is in our mailing list archive and requires recompiling ghostscript
  itself. Please wait for the fix to be officially incorporated into ghostscript,
  and avoid using unmodified stock gs v. 7.22 -8.00, and any newer versions, 
  until further notice. 

  The kernel device code (./configure --with-kerneldevice) switches on code 
  portions which depends on features of the linux kernel only found in 2.4.19+ 
  or 2.5.7+ onwards. The default is auto (enables if the host is linux and 
  the kernel suitably suitably recent).

  The libusb USB code    (./configure --with-libusb) switches on code 
  portions which depends on libusb. The default is auto (enables if "libusb"
  is either a symbolic link to or an actual directory of the libusb source.) 

Installation
============

  ./configure
  make
  make install

  (be sure /usr/local/bin is in your path, if it isn't, try with 
  "./configure --prefix=/usr")

  Note for maintainers, distributors, expert users:
  epl_config.h contains some compile-time options, please have
  a look at it.

  Check the content of the script "README.foomatic" in this source 
  bundle for notes on foomatic and cups. Check the "cups" directory for 
  contributed cups ppd files. Check the "apsfilter" directory for 
  apsfilter setup.

  Read the "FAQ" file, and also browse the mailing list archive (link at 
  the bottom of http://sourceforge.net/projects/epsonepl/) for frequently 
  asked questions that has been asked before.

Usage
=====
  See ps2epl for selectable options. Change "EPL5700L" to "EPL5800L", 
  "EPL5900L", "EPL6100L", "EPL6200L" where appropriate.

  Testing: print using "./ps2epl myfile.ps" and "cat myfile.epl >/dev/lp0",
  or in one step: "./ps2epl myfile.ps /dev/lp0". If you want to try the
  flow control option (look at README.FlowControl) the commands
  should be "./ps2epl myfile.ps" (an empty .epl will be generated and
  no "cat" is needed)  or "./ps2epl myfile.ps /dev/null" (yes, /dev/null).
  
  Alternatively, if your system is based on foomatic, have a look at the 
  README.foomatic file and foomatic* dirs.

License
=======
  The ijs-derived part follows the same licence as ijs. The rest of the code 
  is under the GNU public license, except "epl_compress.c".

  As of version 0.2.3, the usb branch has merged back to the main branch,
  and we no longer bundle libusb as a sub-directory within the source bundle. 
  The src rpm still includes a libusb tar ball and recreates a sub-directory 
  during rpm building, for convenience.

  The content of "epl_compress.c" may have issues with Epson which we are 
  not yet sure about. Therefore we hereby explicitly ask whoever uses the 
  content of that file, NOT to use it for any purpose other than in relation  
  to the Epson EPL series of printers.

Notes
=====
  Almost all the files came as it was from the ijs-0.34 distribution, except
 
    ChangeLog
    LIMITATIONS
    Makefile.in
    README*
    epl_*
    ijs_server_epsonepl.c
    ps2epl
    epl_docs/*
    foomatic/*
    foomatic_scripts/*
    foomatic_PPDs/*
    apsfilter/*
    cups/*
    test5700lusb.c
    epsoneplijs.spec

"Makefile.in" has been mildly adapted from ijs-0.34, "ijs_server_epsonepl.c" 
adapted from "ijs_server_example.c", "ps2epl" adapted from "ps2pdfwr" of 
ghostscript.

Developer Notes
===============
++ SnoopyPro (from HTL)
   Run it with this to silent it up about missing VxD:
         wine --debugmsg fixme-all SnoopyPro.exe

